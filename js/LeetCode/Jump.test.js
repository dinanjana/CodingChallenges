/**
 * @param {number[]} nums
 * @return {number}
 */
const jump = nums => {
     
};

describe("Minimum jumps to reach end", () => {
    it("[2,3,1,1,4]", () => { // 0 -> 1
        expect(jump([2,3,1,1,4])).toEqual(2);
    });
    it("[0]", () => {
        expect(jump([0])).toEqual(0);
    });
    it("[1]", () => {
        expect(jump([0])).toEqual(0);
    });
    it("[1,2]", () => {
        expect(jump([1,2])).toEqual(1);
    })
    it("[1,2,1,1,1]", () => { // 0 -> 1 -> 3
        expect(jump([1,2,1,1,1])).toEqual(3);
    });
    it("[7,0,9,6,9,6,1,7,9,0,1,2,9,0,3]", () => { // 0 -> 7
        expect(jump([7,0,9,6,9,6,1,7,9,0,1,2,9,0,3])).toEqual(2);
    });
    it("[7,0,9,6,9,6,1,6,9,0,1,2,9,0,3]", () => { // 0 -> 7 -> 8
        expect(jump([7,0,9,6,9,6,1,6,9,0,1,2,9,0,3])).toEqual(3);
    });
    it("[14,0,9,6,9,6,1,6,9,0,1,2,9,0,3]", () => {
        expect(jump([14,0,9,6,9,6,1,6,9,0,1,2,9,0,3])).toEqual(1);
    });
    it("[7,0,0,0,0,0,0,7,9,0,1,2,9,0,3]", () => {
        expect(jump([7,0,0,0,0,0,0,7,9,0,1,2,9,0,3])).toEqual(2);
    });
});